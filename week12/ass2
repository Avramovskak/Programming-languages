package week12;

import java.util.List;

import java.util.Random;

import java.util.stream.Collectors;



public class Demo {

	

public static Student createStudent(String name, int indexNo) {

    Random random = new Random();

    int age = random.nextInt(13) + 18; 

    return new Student(name, indexNo, age);

}



public static void printValues(Student s) {

    System.out.println("Name: " + s.name);

    System.out.println("Index Number: " + s.indexNo);

    System.out.println("Age: " + s.age);

    System.out.println();

}



public static void main(String[] args) {

    List<String> names = List.of("Ivan", "Kristina", "Marko", "Petar", "Ilija", "Dushko");



    List<Student> students = names.stream()

            .map(name -> createStudent(name, new Random().nextInt(10000) + 1))

            .collect(Collectors.toList());



    List<Student> pStudents = students.stream()

            .filter(student -> student.name.startsWith("P"))

            .collect(Collectors.toList());



    System.out.println("Students whose name starts with P:");

    pStudents.forEach(Demo::printValues);



    boolean allYoungerThan25 = students.stream().allMatch(student -> student.age < 25);

    System.out.println("Are all students younger than 25? " + allYoungerThan25);



   

    boolean allOlderThan25 = students.stream().allMatch(student -> student.age > 25);

    System.out.println("Are all students older than 25? " + allOlderThan25);



  

    boolean atLeastOneYoungerThan25 = students.stream().anyMatch(student -> student.age < 25);

    System.out.println("Is there a student younger than 25? " + atLeastOneYoungerThan25);

}

}
